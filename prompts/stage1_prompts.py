"""
LLM 프롬프트 템플릿 - 개선된 버전 (v2)
더 명확하고 실용적이며 효율적인 프롬프트 설계
"""

# ============ 역할 설계 프롬프트 ============
ROLES_PROMPT = """
# 역할: 주제 탐구 역할군 설계자

200화 장편 웹소설을 위한 3-5개 역할을 설계합니다.
각 역할은 주제의 다른 측면을 탐구하며 서로 갈등/협력합니다.

## 입력
주제: {topic}
갈등: {conflict}
분위기: {vibe}

## 핵심 설계 전략

### 1. 대립축 설정 (필수)
주제에서 대립 가능한 가치관 2개를 추출:
- 예: "권력" → [지배 vs 자유], [질서 vs 혼돈]
- 각 극단에 역할 배치 + 중간 지점 역할

### 2. 분위기 활용 (필수)
- 체화형: vibe를 그대로 구현하는 역할 1개
- 대조형: vibe와 정반대인 역할 1개
- 변화형: vibe 사이를 오가는 역할 (선택)

### 3. 뾰족한 신념 부여 (매우 중요)
- 역할 중 최소 하나 이상은, 주제에 대해 자신만의 '행동 원리(Principle of Action)'가 되는 '독단적 신념'을 가진 인물로 설정하세요.
- 이 역할은 단순한 행위자를 넘어, 자신의 신념으로 세상의 질서를 바꾸려는 '선동가' 또는 '파괴자'로서 이야기의 사상적 깊이를 책임지는 중심축이 될 것입니다.


### 4. 예상 전복 (선택)
전형적 역할을 뒤집어 신선함 추가:
- "영웅" → "(영웅이 되기를 거부하는 자)"
- "악당" → "(선을 행하려다 악이 된 자)"

## 역할 작성 규칙
- 형식: "(형용사/동사구 + 명사)"
- 장르 독립적 표현 (판타지/SF/현대 모두 가능)
- 구체적 직업명 금지

### 관계 구조
```
역할1 ←→ 역할2: [갈등/협력 축]
역할2 ←→ 역할3: [갈등/협력 축]
```

## 예시
주제 "정의의 본질", 분위기 "냉소적":
1. "(정의를 맹신하는 자)" - 순수한 이상주의
2. "(정의를 조롱하는 자)" - 냉소적 현실주의
3. "(정의를 도구로 쓰는 자)" - 실용주의
4. "(정의 없이 선을 행하는 자)" - 역설적 선행

관계:
- 1↔2: 이상 vs 현실
- 1↔3: 순수 vs 왜곡
- 2↔4: 냉소 vs 행동

## 출력 형식
- 전체를 `roles` 라는 키를 가진 단일 JSON 객체로 응답해야 합니다.
- `roles`의 값은 각 역할 정보를 담은 리스트(배열)입니다.
- 각 역할은 다음 5개의 키를 가진 JSON 객체여야 합니다.
  - role_name: 역할의 이름
  - theme_exploration: 이 역할이 탐구하는 주제의 특정 측면
  - core_direction: 이 역할이 근본적으로 추구하는 가치나 방향성
  - initial_belief: 이 역할이 가질 법한, 행동으로 이어지는 뾰족한 신념의 초기 아이디어
  - conflict_prediction: 다른 역할과 어떻게 충돌하거나 상호작용할지에 대한 예상

"""

# ============ 캐릭터 설계 프롬프트 ============
CHARACTER_PROMPT = """
# 역할: 추상 캐릭터 설계자

역할에 맞는 캐릭터의 내면(Info)을 설계합니다.
Stage 1은 장르 독립적이므로 추상적 표현만 사용합니다.

## 핵심 지시사항 (Master Instructions)
당신은 아래 3단계의 설계 프로세스를 엄격하게 준수하여, 입력된 `{role}`을 입체적인 캐릭터로 구체화해야 합니다.
1. 핵심 엔진 설계 (WHY): 캐릭터의 내면 깊은 곳에 있는 행동 동기, 즉 '왜' 움직이는지를 설계합니다.
2. 표현 시스템 설계 (HOW & WHAT): 그 동기가 외부 세계에 '어떻게' 표현되고, '무엇을' 통해 발현되는지 설계합니다.
3. 미래 잠재력 설계 (FUTURE): 이 캐릭터가 앞으로 어떻게 '변화'할 수 있는지 그 가능성을 설계합니다.

## 입력
주제: {topic}
역할: {role}
갈등: {conflict}
역할 정보: {role_info}




### 1단계: 핵심 엔진 설계 (The "WHY")

#### 1-A. 근본적 상황 및 철학 수립
-   `{role}`과 `{role_info}`를 바탕으로, 캐릭터가 마주한 '근본적인 상황'을 정의합니다.
-   그 상황 속에서 캐릭터가 던지는 '근본적인 질문'과, 그에 대한 독단적인 해답인 '핵심 신념(세상을 움직이는 행동 원리)'을 수립합니다.

#### 1-B. 심리적 결과 도출
-   위 '핵심 신념'에서 자연스럽게 파생되는 아래의 심리적 결과들을 정의합니다.
    -   Desire (욕망): 그 신념을 통해 궁극적으로 이루려는 것.
        desire = f(topic의 핵심 + role의 지향)
        - "~하려는 열망" 형태
        - 예: "(희망을 믿는 자)" → "어둠 속에서도 빛이 되려는 열망"
    -   Fear (두려움): 자신의 신념이 부정당하거나 실패하는 최악의 상황.
        fear = NOT(desire)
        - desire가 완전히 좌절되는 상황
        - 예: "자신의 희망이 무너져 타인마저 절망시키는 것"
    -   Paradox (딜레마/모순): 신념을 추구하기 위해 저질러야 하는 자기모순적인 행동이나 상황.       
        paradox = desire ∩ conflict
        - desire 추구 시 발생하는 모순
        - 예: "타인을 구하려다 자신을 희생해야 하는 선택" 


### 2단계: 표현 시스템 설계 (The "HOW" & "WHAT")

#### 2-A. 아키타이프 DNA (고유한 스타일)
-   캐릭터의 '핵심 신념'과 '심리'가 외부로 드러나는 고유한 스타일과 방식을 정의합니다.
    -   행동 원리 (M.O.): 목표(욕망)를 달성하기 위해 주로 사용하는 방식. (예: 교묘한 기만, 압도적인 폭력, 헌신적인 설득)
    -   핵심 화법 (Rhetoric): 자신의 신념을 드러내거나 상대를 대할 때 주로 사용하는 말투나 논리. (예: 철학적 질문, 직설적 비난, 감성적 호소)
    -   감정 표현 (Emotion): 감정을 드러내거나 숨기는 특징적인 방식. (예: 극단적 평온, 냉소적 농담, 폭발적인 분노)

#### 2-B. 핵심 역량 (특수한 도구 / Capability)
-   위 'DNA(스타일)'를 가장 효과적으로 발현시키는 캐릭터 고유의 추상적 '도구'를 1~2개 정의합니다. 반드시 필요한 것은 아니며, 선택 사항입니다.
    -   유형:
        1.  재능 (Talent): 남들보다 뛰어난 특별한 능력이나 방식. (예: "진실을 꿰뚫어 보는 통찰력", "타인의 욕망을 간파하는 공감 능력")
        2.  상징 (Symbol): 캐릭터의 신념이나 과거를 상징하는 의미 있는 대상. (예: "부서진 가문의 문장", "스승에게 물려받은 낡은 나침반")

### 3단계: 미래 잠재력 설계 (The "FUTURE")

-   잠재된 가능성 (Growth Potential): 이 캐릭터가 이야기의 끝에 도달했을 때, 어떻게 변화하거나 성장(혹은 타락)할 수 있는지에 대한 반전의 여지를 서술합니다.



## 출력 형식
반드시 아래 규칙에 따라 단일 JSON 객체 형식으로만 응답해야 합니다.
최상위 키는 role, analysis, infos 세 개만 포함해야 합니다.

role: 현재 생성 중인 캐릭터의 역할 이름을 문자열로 넣습니다.
analysis: 다음 세 개의 키를 가진 JSON 객체여야 합니다.
situation: 캐릭터가 마주한 근본적인 상황을 서술합니다.
question: 그 상황 속에서 캐릭터가 던지는 근본적인 질문을 서술합니다.
philosophy: 질문에 대한 캐릭터의 독단적인 해답이자 핵심 신념(행동 원리)을 서술합니다.
infos: 여러 개의 JSON 객체를 담은 리스트(배열)여야 합니다.
리스트의 각 객체는 type과 content라는 두 개의 키를 가집니다.
type의 값은 반드시 다음 목록 중 하나여야 합니다: desire, fear, paradox, modus_operandi, rhetoric, emotion, talent, symbol, growth_potential.
content의 값은 각 type에 해당하는 설명을 문자열로 서술합니다. (talent 타입은 내용이 없을 경우 생략 가능합니다.)
모든 event_id는 "미정"으로 설정
"""

# ============ 이벤트 생성 프롬프트 ============
EVENT_PROMPT = """
# 역할: 백스토리 설계자

캐릭터의 현재 특성(Info)을 형성한 과거 사건을 설계합니다.
모든 특성에는 원인이 되는 구체적 사건이 있어야 합니다.

## 입력
캐릭터: {character_role}
특성: {info_type} - {info_content}
갈등: {conflict}
분위기: {vibe}

## 사건 설계 프로세스

### 1. 인과관계 구축
```
과거 사건 → 감정적 영향 → 현재 특성
```

### 2. 분위기 결정
- 역할이 vibe와 **일치**: 사건도 vibe와 일치
- 역할이 vibe와 **대비**: 
  - 옵션A: vibe적 사건 → 반작용으로 현재 성향
  - 옵션B: 반-vibe적 사건 → 그 기억이 원동력

### 3. PlaceHolder 설계
사건에 필요한 타인을 "(형용사 명사)" 형식으로:
- 예: "(믿었던 동료)", "(엄격한 스승)"
- 각 PlaceHolder는 명확한 역할 수행

## 출력 형식
- 반드시 `summary`와 `placeholders` 두 개의 키를 가진 JSON 형식으로만 응답해야 합니다.
- summary: 사건에 대한 1-3 문장의 구체적인 서술입니다. (분량: 300자 이내)
- placeholders: 사건에 관련된 인물들의 역할명을 담은 문자열 리스트입니다.
- [매우 중요] `summary` 서술 내용에는 `placeholders`에 명시된 인물이 반드시 한 번 이상 포함되어야 합니다.


## 예시
- 입력 특성: "타인 불신"
- 입력 대상 역할: "(순진한 신입)"
- 올바른 출력 예시:
"summary": "(순진한 신입)을 지키려던 중요한 순간에 (믿었던 동료)가 배신하여 주인공은 큰 손실을 입었고, 그 이후로 타인을 믿지 못하게 되었다.",
"placeholders": ["(믿었던 동료)"]
"""

CONSOLIDATION_PREPARE_PROMPT = """
# 역할: PlaceHolder 유사성 분석 전문가

당신은 의미론적 유사성을 판단하는 언어 분석 전문가입니다.
동일하거나 유사한 역할을 가진 PlaceHolder들을 그룹화해야 합니다.

## 입력 데이터
{placeholder_list}

## 그룹화 기준

### 1차 기준: 의미적 동일성
- "(엄격한 아버지)" ≈ "(권위적인 부모)"
- "(배신한 친구)" ≈ "(믿었던 동료)"
- "(냉정한 조언자)" ≈ "(객관적 관찰자)"

### 2차 기준: 기능적 유사성
- 동일한 서사적 기능을 수행하는가?
- 주인공과 유사한 관계를 맺는가?
- 비슷한 영향을 미치는가?

## 그룹화 프로세스

1. 각 PlaceHolder의 핵심 의미 추출
2. 의미적 거리 계산
3. 임계값 이하인 경우 같은 그룹으로 분류
4. 그룹 내 대표 역할명 선정

## 주의사항
- 과도한 통합 주의 (각 그룹 최대 4개)
- 최소 2개 이상만 그룹화
- 미묘한 차이가 중요할 수 있음을 고려
- 하나의 PlaceHolder는 하나의 그룹에만 포함되어야 함

## 출력 형식
[[placeholder_1, placeholder_5, placeholder_8], [placeholder_2, placeholder_4], ...]

각 내부 리스트는 하나의 통합 그룹을 나타냅니다.
"""

CONSOLIDATION_PROMPT = """
# 역할: PlaceHolder 통합 의사결정 전문가

당신은 복잡한 관계망을 분석하고 최적의 통합 결정을 내리는 전문가입니다.
유사한 PlaceHolder들을 하나의 캐릭터로 통합하되, 서사적 필요에 따라 구분해야 합니다.

## 입력 데이터 구조
{placeholder_info}

각 행 분석:
- PlaceHolder 역할
- 연관된 중심 인물
- 관련 사건의 맥락

## 통합 의사결정 트리

### Level 1: 역할 유사성 판단
동일한가? → Level 2로
유사한가? → Level 2로
상이한가? → 통합하지 않음

### Level 2: 맥락 분석
같은 중심 인물과 연관? → Level 3으로
다른 중심 인물과 연관? → 신중히 검토

### Level 3: 서사적 필요성
통합 시 이야기가 풍부해지는가?
분리 시 불필요한 복잡성이 생기는가?

## 통합 규칙 (우선순위 순)

1. **명백한 중복 제거**
   - "(엄격한 아버지)" + "(권위적인 부모)" → "(권위적인 부모)"

2. **맥락적 분리 유지**
   - 같은 "(배신한 친구)"라도 다른 중심 인물의 이야기면 분리
   - 다른 중심 인물이라도 서사적으로 유사한 경우 통합 가능성 있음 (신중히 검토)
   - 시점이 크게 다른 사건이면 분리

3. **서사적 통합**
   - 비슷한 기능의 조력자들 → "(든든한 조력자)"
   - 유사한 적대자들 → "(주요 적대자)"

## 통합 결과 생성 가이드

### 통합된 역할명 작성
- 원본들의 공통 속성 추출
- 가장 포괄적이면서도 구체적인 표현 선택
- 2-4단어의 명확한 역할명
- **필수**: 반드시 괄호로 감싸기 (예: "(권위적인 조언자)", "(배신한 동료)")

### 통합 근거 검증
□ 통합이 이야기를 단순화하는가?
□ 중요한 뉘앙스가 손실되지 않는가?
□ 각 원본의 서사적 기능이 보존되는가?

## 품질 기준
- 과도한 통합 금지 (캐릭터 다양성 보존)
- 불필요한 분리 금지 (복잡성 관리)
- 서사적 풍부함 우선

## 출력 형식
- unified_role: 통합된 역할명 (반드시 괄호 포함)
- original_placeholders: 통합된 원본 PlaceHolder들. key: ID, value: 원래 역할명 (괄호 포함)
"""

# ============ PlaceHolder Info 생성 프롬프트 (간소화) ============
PLACEHOLDER_INFO_PROMPT = """
# 역할: PlaceHolder 심화 전문가

PlaceHolder를 실제 캐릭터로 전환하기 위한 Info를 생성합니다.

## 입력
PlaceHolder: {placeholder_role}
관련 사건: {event_contexts}
사용가능 event_id: {valid_event_ids}

## Info 생성 규칙

### 개수 규칙
- **1개 Event**: 2개 Info (1개는 event_id, 1개는 "미정")
- **2개 Event**: 2개 Info (각각 event_id)
- **3개+ Event**: 3-4개 Info (대부분 event_id, 최대 1개 "미정")

### 내용 규칙
- 각 사건에서 역할과 행동 분석
- 일관된 캐릭터 성격 구축
- desire/fear/capability 등 다양한 type 사용

## 출력 형식
```
1. [type]: [내용]
   - event_id: [valid_event_ids 중 하나 또는 "미정"]
2. [type]: [내용]
   - event_id: [...]
```

## 예시
PlaceHolder: "(엄격한 스승)"
Event 1개: 제자를 가혹하게 훈련

출력:
1. desire: 제자를 강하게 만들려는 열망
   - event_id: event_5
2. fear: 제자가 나약해질 것에 대한 두려움
   - event_id: 미정
"""

# ============ 새로운 추가: 빠른 검증 프롬프트 ============
VALIDATION_PROMPT = """
# 역할: 품질 검증자

생성된 내용이 Stage 1 원칙을 준수하는지 빠르게 검증합니다.

## 검증 항목
1. **추상성**: 장르 독립적인가?
2. **일관성**: 서로 모순되지 않는가?
3. **완성도**: 필수 요소가 모두 있는가?
4. **확장성**: 200화로 발전 가능한가?

## 입력
{content_to_validate}

## 출력
✅ 통과 항목: [...]
⚠️ 개선 필요: [구체적 지적]
❌ 재작성 필요: [치명적 문제]
"""